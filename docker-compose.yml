version: '3.8'

services:
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/my_database.dump:/docker-entrypoint-initdb.d/my_database.dump
      - ./db/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - my_network
    restart: always  # Redémarrage automatique

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      PORT: 5000
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
    networks:
      - my_network
    restart: always  # Redémarrage automatique

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    networks:
      - my_network
    restart: always  # Redémarrage automatique

  caddy:
    image: caddy:latest
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - my_network
    restart: always  # Redémarrage automatique

networks:
  my_network:
    driver: bridge

volumes:
  db_data:
  caddy_data:
  caddy_config:
